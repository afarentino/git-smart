#!/usr/bin/env ruby

class GitSmartBinary
  USAGE = %Q{Usage:
    git-smart list                          List all the git commands that can be installed
    git-smart install --all                 Install all git commands
    git-smart install command [command]     Install these git commands
  }

  def initialize
    # If this was called through a symlink, follow it and include the lib/git-smart.rb file
    require File.expand_path(
      File.join(
        File.dirname(File.expand_path(
          File.symlink?(__FILE__) ? File.readlink(__FILE__) : __FILE__
        )),
        '../lib/git-smart'
      )
    )
  end

  def list
    puts "These commands available to install:"
    puts GitSmart.commands.keys.map { |c| "  git-smart install " + c }.join("\n")
    puts "\nOr install everything with: git-smart install --all"
  end

  def install(args)
    cmds = if args.include? '--all'
             GitSmart.commands.keys
           else
             args
           end
    install_dir = get_install_dir
    puts "Installing #{cmds.join(', ')} to #{install_dir}:"
    cmds.each { |cmd|
      filename = "#{install_dir}/git-#{cmd}"
      File.open(filename, 'w') { |out|
        out.puts %Q{#!/usr/bin/env ruby

require 'rubygems'
require 'git-smart'

GitSmart.run('#{cmd}', ARGV)
}
      }
      `chmod a+x #{filename}`
      puts "Wrote #{filename}"
    }
  end

  private

  def get_install_dir
    home_bin = File.expand_path('~/bin')
    if File.exists?(home_bin) && ENV['PATH'].split(':').include?(home_bin)
      home_bin
    else
      '/usr/local/bin'
    end
  end
end

case ARGV.shift
  when 'list'; GitSmartBinary.new.list
  when 'install'; GitSmartBinary.new.install(ARGV)
  else puts GitSmartBinary::USAGE
end
